// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  role     String    @default("user") // Roles: "user", "admin"
  products Product[]
  orders   Order[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int       @default(1)
  variants    Variant[] // Relation avec les variantes (tailles, couleurs)
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  orderItems  OrderItem[] // Ajout de la relation inverse vers OrderItem
}

model Variant {
  id        Int      @id @default(autoincrement())
  size      String   // Exemple: "S", "M", "L"
  color     String   // Exemple: "Rouge", "Noir"
  stock     Int      @default(0)
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
}

model Order {
  id          Int         @id @default(autoincrement())
  totalPrice  Float
  status      String      @default("pending") // Statuts: "pending", "paid", "shipped"
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  items       OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
}
