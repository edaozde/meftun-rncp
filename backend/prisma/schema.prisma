generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int        @id @default(autoincrement())
  email                 String     @unique
  password              String
  createdAt             DateTime   @default(now())
  role                  Role       @default(USER)
  acceptedPrivacyPolicy Boolean    @default(false)
  products              Product[]
  logs                  AuditLog[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int      @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  sold        Boolean  @default(false)
  userId      Int
  categoryId  Int?

  user       User           @relation(fields: [userId], references: [id])
  category   Category?      @relation(fields: [categoryId], references: [id])
  images     ProductImage[]
  promotions Promotion[]
  variants   Variant[]
  logs       AuditLog[] // Ajout de la relation inverse avec AuditLog
}

model Variant {
  id        Int     @id @default(autoincrement())
  size      String
  color     String
  stock     Int     @default(0)
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Category {
  id       Int    @id @default(autoincrement())
  name     String @unique
  parentId Int?

  parent   Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  children Category[] @relation("CategoryToCategory")
  products Product[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Promotion {
  id         Int      @id @default(autoincrement())
  percentage Float
  startDate  DateTime
  endDate    DateTime
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  action    String
  userId    Int
  productId Int?
  createdAt DateTime @default(now())

  user    User     @relation(fields: [userId], references: [id])
  product Product? @relation(fields: [productId], references: [id])
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}
