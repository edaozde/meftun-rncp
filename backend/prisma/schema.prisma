generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int       @id @default(autoincrement())
  email                 String    @unique
  password              String
  createdAt             DateTime  @default(now())
  role                  Role      @default(USER)
  acceptedPrivacyPolicy Boolean   @default(false)
  cart                  Cart?
  orders                Order[]
  products              Product[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  createdAt DateTime   @default(now())
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  variantId Int
  quantity  Int     @default(1)
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  variant   Variant @relation(fields: [variantId], references: [id])

  @@unique([cartId, productId, variantId])
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Float
  userId      Int
  stock       Int         @default(1)
  categoryId  Int?
  createdAt   DateTime    @default(now())
  sold        Boolean     @default(false)
  cartItems   CartItem[]
  orderItems  OrderItem[]
  category    Category?   @relation(fields: [categoryId], references: [id])
  user        User        @relation(fields: [userId], references: [id])
  variants    Variant[]
}

model Variant {
  id        Int        @id @default(autoincrement())
  size      String
  color     String
  stock     Int        @default(0)
  productId Int
  cartItems CartItem[]
  product   Product    @relation(fields: [productId], references: [id])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Order {
  id         Int         @id @default(autoincrement())
  totalPrice Float
  status     String      @default("pending")
  userId     Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  user       User        @relation(fields: [userId], references: [id])
  items      OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  productId Int
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

enum Role {
  USER
  ADMIN
}
